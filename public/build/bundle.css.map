{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Header.svelte",
    "../../Minesweeper.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Header from './Header.svelte'\n\timport Minesweeper from './Minesweeper/Minesweeper.svelte'\n</script>\n\n<main>\n\t<!-- <Header></Header> -->\n\t<Minesweeper></Minesweeper>\n</main>\n\n<style>\n\tmain {\n\t\tbackground-color: #2d2d2d;\n\t\ttext-align: center;\n\t\tmargin: 0 auto;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>\n",
    "<script>\n  let date = Date()\n  const date2 = Date()\n  setInterval(() => date = Date(), 500)\n//   $:date = date\n</script>\n\n<main>\n  <div>\n    <h3>Time is {date}</h3>\n    <h3>date2 is {date2}</h3>\n  </div>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\t/* padding: 1em; */\n\t\twidth: 100%;\n    background-color: #3a3a3a;\n    padding: 0;\n\t\tmargin: 0 auto;\n\t}\n\n\th3 {\n\t\tcolor: #004c8a;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 1em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>\n",
    "<script>\n  //  Заметки:\n  //  нарисовать svg иконки флажка бомбы и тд\n  //\n  //  баг - не весь квадратик кликается\n  //\n  //\n\n  import { onMount } from 'svelte';\n\n  const COMPLEXITY = 8\n  let main\n  let score\n  let elemLeft = 0\n  let elemTop = 0\n  const ms = new Date()\n\tlet canvas\n  const sleep = (millis) => new Promise(resolve => setTimeout(resolve, millis))\n\n  const colors = {\n    1: '#1b76d1',\n    2: '#3a8e3c',\n    3: '#d32f2f',\n    4: '#7c21a1',\n    5: '#f4c20d',\n    6: '#ed44b5',\n    7: '#48e6f1',\n    8: '#f4840d'\n  }\n\n  let vw = even(Math.max(document.documentElement.clientWidth  || 0, window.innerWidth  || 0))\n  let vh = even(Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0))\n  vw = vw > 600 ? 600 : vw\n\n  let vwd = even(vw * 0.1)\n\n  window.addEventListener('resize', () => {\n    vw = even(Math.max(main.offsetWidth || 0, window.innerWidth || 0))\n    vh = even(Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0))\n    vw = vw > 600 ? 600 : vw\n\n    vwd = even(vw * 0.1)\n\n    console.log('vw', vw)\n    console.log('vh', vh)\n\n    elemLeft = even(canvas.offsetLeft + canvas.clientLeft)\n    elemTop  = even(canvas.offsetTop  + canvas.clientTop)\n  })\n\n  console.log('vw', vw)\n  console.log('vh', vh)\n\n  const lands = []\n\n  for (let l = 0; l < 64; l++) {\n    const line = Math.floor(l/8)\n    const col = l % 8\n\n    lands[line] = lands[line] || []\n\n    lands[line].push(\n      {\n        color: \"\",\n        // posX: even(line * vw / COMPLEXITY),\n        // posY: even(col  * vw / COMPLEXITY),\n        open: false,\n        mine: Math.random() > 0.8 ? true : false,\n        value: ''\n      }\n    )\n  }\n\n\tonMount(() => {\n    vw = even(Math.max(main.offsetWidth || 0, window.innerWidth || 0))\n    vh = even(Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0))\n    vw = vw > 600 ? 600 : vw\n\n    elemLeft = canvas.offsetLeft + canvas.clientLeft\n    elemTop  = canvas.offsetTop  + canvas.clientTop\n\n    canvas.addEventListener('click', (evt) => {\n      click(evt)\n      cancelAnimationFrame(loop);\n    })\n    requestAnimationFrame(loop)\n  })\n\n  function loop() {\n      requestAnimationFrame(loop);\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0,0,vw,vh)\n\n      for (let [row, line] of lands.entries()) {\n        line.forEach((land, col) => {\n          if (!canvas.getContext) return\n          land.posX = even(row * vw / COMPLEXITY),\n          land.posY = even(col  * vw / COMPLEXITY),\n\n          ctx.fillStyle = land.color ? land.color : (row + col) % 2 === 1 ? '#a7d948' : '#8ecc39'\n          ctx.fillRect(even(land.posX), even(land.posY), vw / COMPLEXITY  + 1, vw / COMPLEXITY + 1);\n          if(land.open && land.mine) {\n          }\n\n          if(land.open) {\n            ctx.fillStyle = land.value === 0 ? '#fff' : land.value === '*' ? '#000' : 'rgb(77, 255, 77)'\n\n            ctx.font = \"30px serif\";\n            ctx.fillText(land.value, even(land.posX) + even(vwd) / 2, even(land.posY) + even(vwd) / 2)\n          }\n        })\n      }\n\n      ctx.fillStyle = \"#ccc\";\n      ctx.font = \"10px serif\";\n      let date = new Date()\n      let text = date.getHours() + ':' + date.getMinutes()+ ':' + date.getMilliseconds() + ' ' + date.getDate() + '.' + (date.getMonth() + 1) + '.' + date.getFullYear()\n      let width = ctx.measureText(text).width\n      ctx.fillText(text, (vw - width)/ 2, vh - 40);\n\n      ctx.font = \"10px serif\";\n      ctx.fillText(Math.round((new Date() - ms) / 1000) + 's', 20, vh - 40)\n  }\n\n  function click (event) {\n    let x = event.pageX,\n        y = event.pageY - elemTop\n\n    for (let [col, line] of lands.entries()) {\n      const target = line.map((land, row) => {\n        const posY = lands[row][col].posY\n        const posX = lands[row][col].posX\n        let xx = true\n        let yy= true\n\n        if (x >= posX && x <= posX + vw * 0.1) {\n        console.log(posX)\n        console.log(x)\n          xx = false\n        };\n\n        if (y >= posY && y <= posY + vw * 0.1) {\n          console.log(posY)\n          console.log(y)\n          yy = false\n        };\n\n        if (!xx && !yy) {\n          open(row, col)\n        }\n      })\n    }\n  }\n\n  function open (row, col) {\n    if (lands[row][col].open) return\n    lands[row][col].open = true\n          lands[row][col].color = '#8a8a8a'\n          if (lands[row][col].mine) return lands[row][col].value = '*'\n\n          let value = 0\n          try {\n            for (let r = -1; r < 2; r++) {\n              for (let c = -1; c < 2; c++) {\n                if (lands[row + r] && lands[row + r][col + c] && lands[row + r][col + c].mine) value += 1\n              }\n            }\n          } catch (err) {\n            console.log(err)\n          }\n\n          lands[row][col].value = value\n\n          if (value === 0) {\n            for (let r = -1; r < 2; r++) {\n              for (let c = -1; c < 2; c++) {\n                if (c === 0 && r === 0) continue\n                if (row + r < 0 || row + r > 7) continue\n                if (col + c < 0 || col + c > 7) continue\n                open(row + r, col + c)\n              }\n            }\n          }\n  }\n\n  function even (number) {\n    return number\n    number = Math.round(number)\n    if (number % 2 !== 0) return number + 1\n    return number\n  }\n\n\n</script>\n\n<div class='main' bind:this={main}>\n  <div class='score' bind:this={score}>\n    Score\n  </div>\n  <canvas\n    bind:this={canvas}\n    width={vw}\n    height={vw}\n  ></canvas>\n</div>\n\n<style>\n\tcanvas {\n    margin: 30px 0;\n\t\tbackground-color: rgb(22, 22, 22);\n  }\n\n  .main {\n    margin: auto;\n    max-width: 600px;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAWC,IAAI,eAAC,CAAC,AACL,gBAAgB,CAAE,OAAO,CACzB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;ACND,IAAI,cAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAElB,KAAK,CAAE,IAAI,CACT,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,CAAC,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,cAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;AC4KD,MAAM,eAAC,CAAC,AACL,MAAM,CAAE,IAAI,CAAC,CAAC,CAChB,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AACjC,CAAC,AAED,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,KAAK,AAClB,CAAC"
}